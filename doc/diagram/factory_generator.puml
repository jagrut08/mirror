@startuml
class meta::Parameter {
    +get_name() : string
}

class meta::Constructor {
    +get_parameters()
}

class meta::Class {
    +get_name() : string
    
}

class InputData {
}

class product {
    +product()
    +product(...)
}

class factory_builder<Product, Traits> {
    +type_name() : string
    +name() : string
    +build() : factory<T>
}

class factory<Product, Traits> {
    +product_type_name() : string
    +constructor_count() : integer
    +constructor(integer)
    +construct() : Product
}


class factory_constructor<Product, Traits> {
    +is_default_constructor() : boolean
    +is_move_constructor() : boolean
    +is_copy_constructor() : boolean
    +parameter_count() : interger
    +parameter(integer)
    +construct() : Product
}

class factory_parameter<T, Traits> {
    +type_name() : string
    +name() : string
    +get() : T
}

class factory_traits {
}

class builder_unit {
}

class factory_unit {
    +select_constructor() : integer
}

class constructor_unit {
    +make() : Product
}

class parameter_unit<T> {
    +get() : T
}

class atomic_unit<T> {
    +get() : T
}

class composite_unit<T> {
    -factory<T>: fac
    +get() : T
}

meta::Class o-- meta::Constructor : has
meta::Constructor o-- meta::Parameter : has
meta::Class --> product : reflects

factory_builder *-- factory
factory_builder --> builder_unit
factory *-- factory_constructor
factory --> factory_unit
factory ..> product : instantiates
factory_constructor *-- factory_parameter
factory_constructor --> constructor_unit
factory_parameter --> parameter_unit

factory --> meta::Class
factory_constructor --> meta::Constructor
factory_parameter --> meta::Parameter

builder_unit <.. factory_traits
factory_unit <.. factory_traits
constructor_unit <.. factory_traits
composite_unit <.. factory_traits
atomic_unit <.. factory_traits

factory_builder --> factory_traits : uses

parameter_unit <|-- atomic_unit
parameter_unit <|-- composite_unit

builder_unit <-- factory_unit : parent
factory_unit <-- constructor_unit : parent
constructor_unit <-- parameter_unit : parent
factory --* composite_unit

factory_unit --> InputData
note on link : selects\nconstructor

InputData <-- atomic_unit
note on link : decodes\nargument
@enduml
